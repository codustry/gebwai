services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: gebwai:${GEBWAI_VERSION:-latest}
    restart: always
    env_file:
    - .env
    labels:
      # Enables traefik for this container.
    - traefik.enable=true
    - traefik.http.routers.gebwai.rule=Host(`${GEBWAI_TRAEFIK_HOST:-gebwai.localhost}`)
    - traefik.http.routers.gebwai.entrypoints=http
    - traefik.http.routers.gebwai.service=gebwai
    - traefik.http.services.gebwai.loadbalancer.server.port=${GEBWAI_PORT:-8000}
    networks:
    - default
    - traefik-shared
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      GEBWAI_HOST: 0.0.0.0
      GEBWAI_DB_HOST: gebwai-db
      GEBWAI_DB_PORT: 5432
      GEBWAI_DB_USER: gebwai
      GEBWAI_DB_PASS: gebwai
      GEBWAI_DB_BASE: gebwai
      GEBWAI_REDIS_HOST: gebwai-redis
      TESTKAFKA_KAFKA_BOOTSTRAP_SERVERS: '["gebwai-kafka:9092"]'

  db:
    image: postgres:13.8-bullseye
    hostname: gebwai-db
    environment:
      POSTGRES_PASSWORD: "gebwai"
      POSTGRES_USER: "gebwai"
      POSTGRES_DB: "gebwai"
    volumes:
    - gebwai-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U gebwai
      interval: 2s
      timeout: 3s
      retries: 40

  redis:
    image: bitnami/redis:6.2.5
    hostname: "gebwai-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50

  zookeeper:
    image: "bitnami/zookeeper:3.7.1"
    hostname: "gebwai-zookeeper"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_LOG_LEVEL: "ERROR"
    healthcheck:
      test: zkServer.sh status
      interval: 1s
      timeout: 3s
      retries: 30

  kafka:
    image: "bitnami/kafka:3.2.0"
    hostname: "gebwai-kafka"
    environment:
      KAFKA_BROKER_ID: "1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://gebwai-kafka:9092"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "gebwai-zookeeper:2181"
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092
      interval: 1s
      timeout: 3s
      retries: 30
    depends_on:
      zookeeper:
        condition: service_healthy



volumes:
  gebwai-db-data:
    name: gebwai-db-data

networks:
  # Network for traefik.
  traefik-shared:
    name: traefik-shared
